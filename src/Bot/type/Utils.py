import discord
from discord.ext import commands

from typing   import Union

class _MissingSentinel:
    __slots__: tuple

    def __eq__(self, other) -> bool:...
    def __bool__(self)      -> bool:...
    def __hash__(self)      -> int:...
    def __repr__(self)      -> str:...

MISSING: None = _MissingSentinel()

def Open(path: str = MISSING, __defalts: dict = {})                                                                            -> dict:...
def Save(path: str = MISSING, obj: dict = MISSING)                                                                             -> bool:...
def _to_str(size: int, suffixes: tuple, base: int, *, precision: int = 1, separator: str = " ")                                -> str:...
def decimal(size: int, *, precision: int = 1, separator: str = " ")                                                            -> str:...
async def purge(ctx: commands.Context = MISSING, nombre: int = MISSING)                                                        -> Union[bool, list[discord.Message]]:...
async def channel_send(channel: discord.TextChannel = MISSING, *, message: str = False, embed: discord.Embed = False)          -> Union[discord.Message, discord.Embed, bool]:...
async def send(ctx: commands.Context = MISSING, *, message: str = False, embed: discord.Embed = False, reference: bool = True) -> Union[discord.Message, discord.Embed, bool]:...
